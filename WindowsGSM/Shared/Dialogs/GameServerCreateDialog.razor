@inject GameServerService GameServerService
@inject ISnackbar Snackbar

<MudDialog>
    <DialogContent>
        <MudForm @ref="_form" Style="padding-right: 12px; max-height: 500px; overflow-y: scroll">
            <MudSelect @bind-Value="@_gameServer" Label="Select the game server" HelperText="@($"{@_gameServers.Count} game servers supported")" Variant="Variant.Outlined">
                @foreach (IGameServer gameServer in _gameServers)
                {
                    <MudSelectItem Value="@gameServer">
                        <div class="d-flex align-center">
                            <img src="@gameServer.ImageSource" height="24" class="mr-2 rounded-lg" /> @gameServer.Name
                        </div>
                    </MudSelectItem>
                }
            </MudSelect>

            <MudTextField @bind-Value="@_basic.Name" Label="Name" HelperText="Server Display Name (You can change it later)"></MudTextField>
            <MudTextField @bind-Value="@_basic.Directory" Label="Directory" HelperText="Server Create Directory"></MudTextField>

            @if (_gameServer != null)
            {
                List<PropertyInfo> tabs = new();

                if (_gameServer.Config.TryGetPropertyInfo("Create", out PropertyInfo? createTab))
                {
                    tabs.Add(createTab);
                }

                if (_gameServer.Config.TryGetPropertyInfo("SteamCMD", out PropertyInfo? steamCMDTab))
                {
                    tabs.Add(steamCMDTab);
                }

                @foreach (PropertyInfo tab in tabs)
                {
                    <MudFieldBuilder infos="tab.PropertyType.GetProperties()" config="tab.GetValue(_gameServer.Config)" />
                }
            }
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="Submit">Create</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    public MudDialogInstance? MudDialog { get; set; }

    private List<IGameServer> _gameServers = new();
    private IGameServer? _gameServer;
    private Guid _guid = Guid.NewGuid();
    private BasicConfig _basic = new();
    private MudForm? _form;

    protected override void OnInitialized()
    {
        _gameServers = GameServerService.GetSupportedGameServers();
        _gameServer = _gameServers[0]; // TODO: Get last selected game server using local storage maybe
        _basic = GameServerService.GetNewBasicConfig(_guid);
    }

    private async Task Submit()
    {
        if (_gameServer != null && _form != null)
        {
            await _form.Validate();

            if (_form.IsValid)
            {
                _gameServer.Config.Basic = _basic;
                _gameServer.Config.Guid = _guid;

                MudDialog?.Close(DialogResult.Ok(_gameServer));
            }
            else
            {
                foreach (string error in _form.Errors)
                {
                    Snackbar.Add($"Create Server: {error}", Severity.Error);
                }
            }
        }
    }

    private void Cancel() => MudDialog?.Cancel();
}
